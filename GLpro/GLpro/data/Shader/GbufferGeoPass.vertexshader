#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal_modelspace;

out vec2 UV;
out vec3 Position_worldspace;
out vec3 Normal_worldspace;

uniform mat4 ViewVP;	//camera vp
uniform mat4 M;		// model(world)

void main(){

	gl_Position			=  ViewVP * M * vec4(vertexPosition_modelspace,1);
	
	Position_worldspace = ( M * vec4(vertexPosition_modelspace,	1) ).xyz;
	Normal_worldspace	= ( M * vec4(vertexNormal_modelspace,	0) ).xyz;
	UV = vertexUV;
}

