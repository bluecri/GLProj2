#version 330 core

/*
*	reference
*	https://learnopengl.com/Advanced-Lighting/Bloom
*/

layout (location = 0) out vec3 outColor;   

in vec2 UV;

uniform sampler2D TextureBloom;
  
uniform bool BHorizontal;
uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

void main()
{             
    vec2 tex_offset = 1.0 / textureSize(TextureBloom, 0);
    vec3 result = texture(TextureBloom, UV).rgb * weight[0]; // current fragment's contribution
    if(BHorizontal)
    {
        for(int i = 1; i < 5; ++i)
        {
			vec2 tex_offset_X = vec2(tex_offset.x * i, 0.0);
            result += texture(TextureBloom, UV + tex_offset_X).rgb * weight[i];
            result += texture(TextureBloom, UV - tex_offset_X).rgb * weight[i];
        }
    }
    else
    {
        for(int i = 1; i < 5; ++i)
        {
			vec2 tex_offset_Y = vec2(0.0, tex_offset.y * i);
            result += texture(TextureBloom, UV + tex_offset_Y).rgb * weight[i];
            result += texture(TextureBloom, UV - tex_offset_Y).rgb * weight[i];
        }
    }
    outColor = result;

	// debug
	//outColor = vec3(1.0, 1.0, 1.0);
}